下面是“To Do”列表项，用来完成测试、调试用户控件并使用户控件安全可靠。

A) 创建用户控件测试程序

有两种方法可以给用户控件建立测试程序，依赖于是在标准 EXE 中插入的还是创建的 ActiveX 控件工程。

如果是创建了 ActiveX 控件工程，按下列步骤将建立测试程序：

1)  保存用户控件。
2)  关闭用户控件设计器，并进入运行模式。
3)  如果已经创建了测试工程，则从“文件”菜单选择“添加工程”添加一个标准 EXE 工程。
4)  在工具箱中双击用户控件图标，在标准 EXE 工程的 Form1 上放置一个用户控件实例。您可以根据需要移动控件或调整控件大小。
5)  保存工程组。在以后的开发和测试过程中，您可以通过打开工程组而同时打开两个工程。
如果是在标准 EXE 工程中插入用户控件，则应遵循下列步骤：

1)  保存用户控件。
2)  关闭用户控件设计器，并进入运行模式。
3)  在工程窗口，双击标准 EXE 工程的 Form1，打开设计器。
4)  在工具箱中双击用户控件图标，在标准 EXE 工程的 Form1 上放置一个用户控件实例。您可以根据需要移动控件或调整控件大小。

B) 在设计时和运行时测试用户控件行为。

1)  选中测试工程的 Form1 上放置的控件，按下 F4 打开属性窗口。确认可以看到并改变添加到控件中的属性。
2)  关闭 Form1 并重新打开它，并确认用户控件的属性值已被正确地保存和获取。
3)  双击放在 Form1 上的用户控件，并在代码窗口右边(过程)的下拉框中选择合适的事件。
4)  为用户控件的事件处理过程添加代码。
5)  添加其他控件，并分别在其事件过程中添加代码，测试控件的属性和方法在运行时的行为。
6)  按下 F5 运行测试工程，测试运行时控件行为。

C) 生成安全可靠、功能齐全的控件 (添加向导没有提供的详细代码)

1)  如果窗体中包含构成控件，某些事件和属性需要被映射到多个构成控件。例如，BackColor 属性应该映射到用户控件的 BackColor 属性和任何 label 控件。MouseMove 事件需要映射到所有构成控件的 MouseMove 事件。
2)  为所有事件 (如 MouseMove) 添加坐标翻译，指定 X 和 Y 坐标。
3)  对于所有有枚举项的属性 (如 MousePointer 和 BorderStyle)，改变属性的数据类型为适合的枚举项名称 (如 MousePointerConstants 和 BorderStyleConstants)，以至于枚举项元素将出现在属性窗口中。
4)  给您自己的属性添加自定义的枚举项，并添加代码使之有效。
5)  向 ReadProperties 事件添加错误捕获，以保护无效值或错误数据类型不会人为地编辑到 .frm 文件中。对于每个属性，当出现这样一个错误时，添加代码来切换到缺省设置。(请参见联机手册中“保存控件属性”和“创建仅设计时、仅运行时或运行时只读属性”。)
6)  如果您有构成控件，当调整控件大小时，添加代码到 UserControl_Resize 来调整其大小。
7)  为生效的属性设置过程 ID，这样当生效或禁止时您的控件将与其他 ActiveX 控件一样工作。
8)  向导用类似的名称映射控件的属性到构成控件 (或用户控件) 的属性。有些情况下，可能需要用不同的名称映射 (例如，ShapeLabel 映射其 BackColor 到构成 Shape 控件的 FillColor)；这种再映射必须由人工完成。
9)  任何影响控件大小的属性 (如字体大小，控件中的 AutoSize 属性) 应从 Property Let 调用调整大小代码。
10) 对于用户画的控件，添加代码到用户控件的 Paint 事件来画控件的外观。(请参见联机手册中“用户画控件”和“任何在控件中处理焦点”。)
11)  如果有的控件为数据绑定，请参见联机手册中“为控件绑定数据源”。
12)  为控件添加附加功能。联机手册中“Visual Basic ActiveX 控件功能”将会有所帮助。

(请参见 CtlPlus.vbg 实例应用程序。)

可以通过再次运行向导而修改控件，并选择用户控件。

使用“属性页向导”为您的用户控件创建属性页。

欲知有关创建和测试 ActiveX 控件的详细信息，请参见第4章“创建 ActiveX 控件”和第9章“联编 ActiveX 控件”。

第6章“部件设计的常用规则”和第7章“调试、测试并配置 ActiveX 部件”也包含一些有用信息。
